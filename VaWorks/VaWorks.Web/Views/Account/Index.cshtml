@model VaWorks.Web.Data.Entities.ApplicationUser

@{
    ViewBag.Title = "VaWorks";
}

<h2>@Model.Name</h2>
<h4 class="text-muted organization" data-org-id="@Model.OrganizationId"></h4>
<div>
    <ul class="nav nav-tabs">
        <li class="active"><a href="#profile" data-toggle="tab" aria-expanded="true">Profile</a></li>
        <li class=""><a href="#quotes" data-toggle="tab" aria-expanded="true">Quotes</a></li>
        @*<li class=""><a href="#companyquotes" data-toggle="tab" aria-expanded="true">Company Quotes</a></li>*@
        <li class=""><a href="#contacts" data-toggle="tab" aria-expanded="true">Contacts</a></li>
        <li class=""><a href="#messages" data-toggle="tab" aria-expanded="false">Messages @{Html.RenderAction("GetNewMessageCount", "Account");}</a></li>
        @if (User.IsInRole("System Administrator")) {
        <li class=""><a href="#requests" data-toggle="tab" aria-expanded="false">Requests @{Html.RenderAction("PendingRequestsCount", "Invitations");}</a></li>
        <li class=""><a href="#invitations" data-toggle="tab" aria-expanded="false">Invitations @{Html.RenderAction("PendingInvitationsCount", "Invitations");}</a></li>
        }
    </ul>
    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade in" id="quotes">
            <h4>Quotes</h4>
            <div class="btn-group">
                @if (User.IsInRole("Sales")) {
                    @Html.ActionLink("Create Quote", "Create", "Quotes", null, new { @class = "btn btn-link" })
                } else {
                    @Html.ActionLink("Select Kit", "Index", "KitSelection", null, new { @class = "btn btn-link" })
                }
            </div>
            @{ Html.RenderAction("QuotesGrid", "Quotes");}
        </div>

        @*<div class="tab-pane fade in" id="companyquotes">
            <h4>Quotes that people in your company have created</h4>
            <div class="btn-group">
                @Html.ActionLink("Select Kit", "Index", "KitSelection", null, new { @class = "btn btn-link" })
            </div>
            @using GridMvc.Html;
            @if (Model.Organization != null) {
            @Html.Grid(Model.Organization.GetAllQuotes()).Columns(columns => {
            columns.Add(m => m.QuoteNumber).Sortable(true).Filterable(true).SetWidth(220);
            columns.Add(m => m.Revision).Sortable(true).Filterable(true).SetWidth(220);
            columns.Add(m => m.Title).Sortable(true).Filterable(true).SetWidth(220);
            columns.Add(m => m.CustomerName).Titled("Created By").Sortable(true).Filterable(true).SetWidth(220);
            columns.Add(m => m.CreatedDate.Date).Titled("Date").Sortable(true).Filterable(true).Format("{0:MM/dd/yyyy}");
            columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(m => Html.ActionLink("View", "ViewQuote", "Quotes", new { quoteId = m.QuoteId }, null));
            }).WithPaging(50).WithMultipleFilters().Selectable(false)
            }
        </div>*@

        <div class="tab-pane fade in" id="contacts">
            <div class="row">
                @foreach (var c in Model.Contacts) {
                <div class="col-sm-6">
                    <div class="panel card">
                        <div class="panel-body p-t-10">
                            <div class="media-main">
                                <div class="pull-left">
                                    <img class="avatar img-circle" src="@c.ImageString" alt="">
                                </div>
                                <div class="pull-right btn-group-sm">
                                    @if(User.IsInRole("Sales") || User.IsInRole("System Administrator")){
                                    using (Html.BeginForm("RemoveConnection", "Connections", FormMethod.Post)) {
                                    <input type="hidden" name="userId" value="@c.Id" />
                                    <button type="submit" class="btn btn-danger">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                    }
                                    }
                                </div>
                                <div class="info">
                                    <h4>@c.Name</h4>
                                    <p class="text-muted organization" data-org-id="@c.OrganizationId"></p>
                                    <p class="text-muted">@c.Title</p>
                                    <p class="text-muted">@c.Email</p>
                                    <p class="text-muted">@c.PhoneNumber</p>
                                    <div class="clearfix"></div>
                                    <ul class="social-links list-inline p-b-10">
                                        @if (!string.IsNullOrEmpty(c.Facebook)) {
                                        <li>
                                            <a title="" data-placement="top" data-toggle="tooltip" class="tooltips" target="_blank" href="@c.Facebook" data-original-title="Facebook"><i class="fa fa-facebook"></i></a>
                                        </li>
                                        }
                                        @if (!string.IsNullOrEmpty(c.Twitter)) {
                                        <li>
                                            <a title="" data-placement="top" data-toggle="tooltip" class="tooltips" target="_blank" href="@c.Twitter" data-original-title="Twitter"><i class="fa fa-twitter"></i></a>
                                        </li>
                                        }
                                        @if (!string.IsNullOrEmpty(c.LinkedIn)) {
                                        <li>
                                            <a title="" data-placement="top" data-toggle="tooltip" class="tooltips" target="_blank" href="@c.LinkedIn" data-original-title="LinkedIn"><i class="fa fa-linkedin"></i></a>
                                        </li>
                                        }
                                        @if (!string.IsNullOrEmpty(c.Skype)) {
                                        <li>
                                            <a title="" data-placement="top" data-toggle="tooltip" class="tooltips" target="_blank" href="@c.Skype" data-original-title="Skype"><i class="fa fa-skype"></i></a>
                                        </li>
                                        }
                                        <li>
                                            <a title="" data-placement="top" data-toggle="tooltip" class="tooltips" href="mailto:@c.Email" data-original-title="Message"><i class="fa fa-envelope-o"></i></a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                }
            </div>
            <div class="row">
                @if(User.IsInRole("Sales") || User.IsInRole("System Administrator")){
                <h4>Add Contacts</h4>
                using (Html.BeginForm("Search", "Connections", FormMethod.Post)) {
                <div class="col-md-8">
                    <div class="col-md-6">
                        <input class="form-control" name="email" placeholder="Search by email address" />
                    </div>
                    <div class="col-md-2">
                        <input class="btn btn-primary" type="submit" value="Search" />
                    </div>
                </div>
                }
                }
            </div>
        </div>

        <div class="tab-pane fade active in" id="profile">
            <h3>Edit Profile</h3>
            <div class="row">
                @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" })) {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)
                <div class="col-md-3">
                    <div class="text-center">
                        @if (string.IsNullOrEmpty(Model.ImageString)) {
                        <img src="~/images/profiledefault.png" class="avatar img-circle" alt="avatar">
                        } else {
                        <img src="@Model.ImageString" class="avatar img-circle" alt="avatar">
                        }
                        <h6>Upload a different photo...</h6>

                        <input type="file" name="file" class="form-control">
                    </div>
                </div>
                <div class="col-md-9 personal-info">
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "User name", type = "text", disabled = true })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "First name", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Job title", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", type = "email" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Phone", type = "phone" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LinkedIn, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.LinkedIn, new { @class = "form-control", placeholder = "LinkedIn", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Facebook, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Facebook, new { @class = "form-control", placeholder = "Facebook", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Twitter, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Twitter, new { @class = "form-control", placeholder = "Twitter", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Skype, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Skype, new { @class = "form-control", placeholder = "Skype", type = "text" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2 col-md-offset-3" style="margin-top: 15px;">
                            <input type="submit" class="btn btn-primary form-control" value="Save" />
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>

        <div class="tab-pane fade in" id="messages">
            @using GridMvc.Html;
            @Html.Grid(Model.Messages.OrderByDescending(m => m.DateSent)).Columns(columns => {
            columns.Add(m => m.Message).Sortable(false).Filterable(false).SetWidth(400);
            columns.Add(m => m.DateSent).Titled("Date").Sortable(true).Filterable(true).RenderValueAs(m => m.DateSent.Date.ToShortDateString());
            columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(m => @<form action="Account/MarkMessageAsRead" method="post">@if (!m.IsRead) {<input type="hidden" value="@m.UserMessageId" name="messageId" /> <input type="submit" value="Mark as Read" class="btn btn-link" />}</form>);
            columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(m => @<form action="Account/DeleteMessage" method="post"><input type="hidden" value="@m.UserMessageId" name="messageId" /> <input type="submit" value="Delete" class="btn btn-link" /></form>);

            }).WithPaging(10).WithMultipleFilters().Selectable(false)
        </div>

        @if (User.IsInRole("System Administrator")) {
        <div class="tab-pane fade in" id="requests">
            @{ Html.RenderAction("InvitationRequestsList", "Invitations"); }
        </div>
        }
        @if (User.IsInRole("System Administrator")) {
        <div class="tab-pane fade in" id="invitations">
            @{ Html.RenderAction("InvitationsList", "Invitations"); }
        </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src="~/Scripts/gridmvc.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap-datepicker.js" type="text/javascript"></script>
<script type="text/javascript">
    var url = document.location.toString();
    if (url.match('#')) {
        $('.nav-tabs a[href=#' + url.split('#')[1] + ']').tab('show');
    }

    // Change hash for page-reload
    $('.nav-tabs a').on('shown.bs.tab', function (e) {
        window.location.hash = e.target.hash;
    })

    // change the paging url
    $('#invitations').find(".grid-footer").find("ul").find("a").each(
        function () {
            $(this).attr('href', this.href + "#invitations");
        });

    $('#invitations').find(".grid-header").find(".grid-header-title").find("a").each(
        function () {
            $(this).attr('href', this.href + "#invitations");
        });

    $('#requests').find(".grid-footer").find("ul").find("a").each(
        function () {
            $(this).attr('href', this.href + "#requests");
        });

    $('#requests').find(".grid-header").find(".grid-header-title").find("a").each(
        function () {
            $(this).attr('href', this.href + "#requests");
        });

    $('#quotes').find(".grid-footer").find("ul").find("a").each(
        function () {
            $(this).attr('href', this.href + "#quotes");
        });

    $('#quotes').find(".grid-header").find(".grid-header-title").find("a").each(
        function () {
            $(this).attr('href', this.href + "#quotes");
        });


    $('#messages').find(".grid-footer").find("ul").find("a").each(
        function () {
            $(this).attr('href', this.href + "#messages");
        });

    $('#messages').find(".grid-header").find(".grid-header-title").find("a").each(
        function () {
            $(this).attr('href', this.href + "#messages");
        });


    $('.organization').each(function () {
        var p = $(this);
        $.ajax({
            url: '/Account/GetOrganizationDetails/',
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: { organizationId: p.data('org-id') },
            success: function (data) {
                if (data.length > 0) {
                    p.html(data[0]['Name']);
                }

                stop();
            },
            error: function () {

            }
        });
    });



</script>
}

@section styles{
<link href="~/Content/Gridmvc.css" rel="stylesheet">
<link href="~/Content/gridmvc.datepicker.css" rel="stylesheet">
<link href="~/Content/tree.css" rel="stylesheet" />
}