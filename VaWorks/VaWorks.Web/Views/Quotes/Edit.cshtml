@model VaWorks.Web.Data.Entities.Quote

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Quote</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-inline">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.CreatedById)
    @Html.HiddenFor(model => model.QuoteId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.ModifiedDate)
    @Html.HiddenFor(model => model.Total)
    @Html.HiddenFor(model => model.CreatedByName)

    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuoteNumber, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.QuoteNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuoteNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Revision, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Revision, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Revision, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SalesPerson, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.SalesPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesPerson, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

</div>
}


<hr />

<table class="table">
    <tr>
        <th>
            Kit Number
        </th>
        <th>
            Valve
        </th>
        <th>
            Actuator
        </th>
        <th>Quantity</th>
        <th></th>
    </tr>

    @foreach(var item in Model.Items) {
    <tr>
        <td>
            @item.KitNumber
        </td>
        <td>
            @item.Valve
        </td>
        <td>
            @item.Actuator
        </td>
        <td>
            @using(Html.BeginForm("UpdateQuantity", "Quotes", FormMethod.Post)){
            @Html.AntiForgeryToken()
            <div class="form-inline">
                <div class="form-group">
                    <input type="hidden" value="@item.QuoteItemId" name="quoteItemId" />
                    <input type="number" value="@item.Quantity" name="quantity" class="form-control" />
                    <input type="submit" value="Update" class="btn btn-link" />
                </div>
            </div>
            }
        </td>
        <td></td>
    </tr>
    }

</table>

<h3 class="pull-right">
    @Model.Total.ToString("C")
</h3>

<p>
  @Html.ActionLink("Add Item", "AddItem", "Quotes", new { quoteId = Model.QuoteId}, null)
</p>

